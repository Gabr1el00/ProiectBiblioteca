
import java.sql.*;
import static java.time.Clock.system;
import static java.time.InstantSource.system;
import javax.mail.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.internet.*;
import javax.activation.*;
import javax.swing.JOptionPane;

public class AdminMenu extends javax.swing.JFrame{ 
    public static int y;
    public static String m;
    public AdminMenu() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ckbox = new javax.swing.JCheckBox();
        create = new javax.swing.JButton();
        username = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        textUser = new javax.swing.JLabel();
        textPassword = new javax.swing.JLabel();
        reset = new javax.swing.JButton();
        back = new javax.swing.JButton();
        textUser1 = new javax.swing.JLabel();
        textPassword1 = new javax.swing.JLabel();
        em = new javax.swing.JTextField();
        cod = new javax.swing.JTextField();
        send = new javax.swing.JButton();
        textPassword2 = new javax.swing.JLabel();
        exit = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 5));
        jPanel1.setForeground(new java.awt.Color(51, 204, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(630, 423));
        jPanel1.setName(""); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ckbox.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        ckbox.setText("Show password");
        ckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckboxActionPerformed(evt);
            }
        });
        jPanel1.add(ckbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, 130, -1));

        create.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        create.setText("CREATE");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });
        jPanel1.add(create, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 330, 130, -1));

        username.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jPanel1.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, 120, -1));

        password.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jPanel1.add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, 120, -1));

        textUser.setBackground(new java.awt.Color(255, 255, 255));
        textUser.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        textUser.setText("Username");
        jPanel1.add(textUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 110, 22));

        textPassword.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        textPassword.setText("Password");
        jPanel1.add(textPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 120, 20));

        reset.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        reset.setText("RESET");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        jPanel1.add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 250, 130, -1));

        back.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        back.setText("BACK To First Page");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 160, -1));

        textUser1.setBackground(new java.awt.Color(255, 255, 255));
        textUser1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        textUser1.setText("ÃŽnregistrarea unui MODERATOR");
        jPanel1.add(textUser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 470, 30));

        textPassword1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        textPassword1.setText("E-mail");
        jPanel1.add(textPassword1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 200, 120, 20));

        em.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jPanel1.add(em, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 120, -1));

        cod.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jPanel1.add(cod, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 120, -1));

        send.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        send.setText("Send Code");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });
        jPanel1.add(send, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 200, 130, 20));

        textPassword2.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        textPassword2.setText("Code");
        jPanel1.add(textPassword2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 130, 20));

        exit.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        exit.setText("EXIT");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        jPanel1.add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 330, 110, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\Biblioteca\\interior-biblioteca-sala-vacia-leer-libros-estantes-madera_33099-1722.jpg")); // NOI18N
        jLabel4.setAlignmentY(0.0F);
        jLabel4.setPreferredSize(new java.awt.Dimension(600, 400));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 3, 620, 420));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
   
        if((username.getText().length()==0) || (password.getText().length()==0)||(em.getText().length()==0)||(cod.getText().length()==0)){
           JOptionPane.showMessageDialog(null, "Este Obligatoriu completarea tuturor campurilor!");   
    }else{
       boolean exist=false;
       if (username.getText().length()>5){
            try{
                Connection con=BDConn.getBDConn();
                String sql ="Select * from users where login=?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, username.getText());
                ResultSet rs = pst.executeQuery();
                if(rs.next()){
                   JOptionPane.showMessageDialog(null, "Exista deja un cont cu astfel de user"); 
                   exist=true;
                }
            }catch(Exception e){   
          }
         if (!exist){
             if (password.getText().length()<6){
             JOptionPane.showMessageDialog(null, "Passwordul are mai putin de 6 caractere");
    }else if ((m==null)||(!m.equals(em.getText()))){
        JOptionPane.showMessageDialog(null, "Emailul nu corespunde cu cel initial sau nu ati furnizat un cod pe acest email!");
    }else if (cod.getText().length()!=6){
        JOptionPane.showMessageDialog(null, "Codul trebuie sa contina exact 6 cifre!");
    }else{try{
            int i=Integer.parseInt(cod.getText());
            if(y!=i){
                JOptionPane.showMessageDialog(null, "Codul nu coincide cu cel trimis!");
            }
            else{
            String sub="Datele de autentificare pentru BibliotecaVirtuala";
            String content="Username : "+username.getText()+" Password : "+password.getText();
            try{Connection con=BDConn.getBDConn();
            String sql =("INSERT INTO users (login, password, email) VALUES (?, ?, ?)");
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, username.getText());
            pst.setString(2, password.getText());
            pst.setString(3, em.getText());
            pst.executeUpdate();
            Mail.SendMess(m, sub, content);
            JOptionPane.showMessageDialog(null, "Noul moderator a fost inregistrat cu succes!");
            }catch(Exception e){
               JOptionPane.showMessageDialog(null, "A aparut o eroare la inserarea datelor in baza de date"); 
               
            }}}
    catch(Exception e){
        JOptionPane.showMessageDialog(null, "Codul trebuie sa contina doar cifre!");
    }
    }}}
    else{
             JOptionPane.showMessageDialog(null, "Userul contine mai putin de 6 caractere");
       }
    
           }
    }//GEN-LAST:event_createActionPerformed

    private void ckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckboxActionPerformed
        if(ckbox.isSelected()){
            password.setEchoChar((char)0);
        }else{
            password.setEchoChar('*');
        }
    }//GEN-LAST:event_ckboxActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
                    Main men = new Main();
                    men.setVisible(true);
                    setVisible(false);
    }//GEN-LAST:event_backActionPerformed

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed

        boolean exist=false;
        try{
                Connection con=BDConn.getBDConn();
                String sql ="Select * from users where login=?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, em.getText());
                ResultSet rs = pst.executeQuery();
                if(rs.next()){
                   JOptionPane.showMessageDialog(null, "Pe acest email exista deja un cont"); 
                   exist=true;
                }
            }catch(Exception e){   
          }
        if (!exist){
        String to = em.getText();
        Random x = new Random();
        int n = 99999+x.nextInt(900000);
        y=n;
        m=em.getText();
        String content = "Authentication Code is "+n;
        String sub = "Authentication Code";
        try{Mail.SendMess(to,sub,content);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Adresa de email nu este valida!");
        }}
    }//GEN-LAST:event_sendActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
      username.setText("");
      password.setText("");
      em.setText("");
      cod.setText("");
    }//GEN-LAST:event_resetActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed
        
    
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
       
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JCheckBox ckbox;
    private javax.swing.JTextField cod;
    private javax.swing.JButton create;
    private javax.swing.JTextField em;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField password;
    private javax.swing.JButton reset;
    private javax.swing.JButton send;
    private javax.swing.JLabel textPassword;
    private javax.swing.JLabel textPassword1;
    private javax.swing.JLabel textPassword2;
    private javax.swing.JLabel textUser;
    private javax.swing.JLabel textUser1;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables

}
