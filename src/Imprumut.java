

import java.sql.*;
import java.util.Random;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 
 * @author Admin
 */
public class Imprumut extends javax.swing.JFrame {
    public static int y;
    public static String m=null;
    /**
     * Creates new form NewJFrame
     */
    public Imprumut() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ncf = new javax.swing.JTextField();
        nc = new javax.swing.JLabel();
        n = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        reset = new javax.swing.JButton();
        back = new javax.swing.JButton();
        pf = new javax.swing.JTextField();
        cnpf = new javax.swing.JTextField();
        nf = new javax.swing.JTextField();
        emf = new javax.swing.JTextField();
        p = new javax.swing.JLabel();
        cnp = new javax.swing.JLabel();
        em = new javax.swing.JLabel();
        cod = new javax.swing.JLabel();
        send = new javax.swing.JButton();
        check = new javax.swing.JButton();
        create = new javax.swing.JButton();
        codf = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 5));
        jPanel1.setForeground(new java.awt.Color(51, 204, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(630, 423));
        jPanel1.setName(""); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ncf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jPanel1.add(ncf, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 170, -1));

        nc.setBackground(new java.awt.Color(255, 255, 255));
        nc.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        nc.setText("Numele cartii");
        jPanel1.add(nc, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 150, 22));

        n.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        n.setText("Numele");
        jPanel1.add(n, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 140, 20));

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel3.setText("Înregistrarea unui împrumut");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 450, 40));

        reset.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        reset.setText("RESET");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        jPanel1.add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 330, 100, -1));

        back.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        back.setText("BACK");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 90, -1));

        pf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jPanel1.add(pf, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, 170, -1));

        cnpf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jPanel1.add(cnpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, 170, -1));

        nf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jPanel1.add(nf, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 170, -1));

        emf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jPanel1.add(emf, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, 170, -1));

        p.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        p.setText("Prenumele");
        jPanel1.add(p, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 140, 20));

        cnp.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        cnp.setText("CNP");
        jPanel1.add(cnp, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 140, 20));

        em.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        em.setText("Email");
        jPanel1.add(em, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 140, 20));

        cod.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        cod.setText("Code");
        jPanel1.add(cod, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 140, 20));

        send.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        send.setText("Send Code");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });
        jPanel1.add(send, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 180, 130, 20));

        check.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        check.setText("Check ");
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });
        jPanel1.add(check, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 60, 130, 20));

        create.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        create.setText("INREGISTRATION");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });
        jPanel1.add(create, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 330, 160, -1));

        codf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jPanel1.add(codf, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 210, 170, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\Biblioteca\\interior-biblioteca-sala-vacia-leer-libros-estantes-madera_33099-1722.jpg")); // NOI18N
        jLabel4.setAlignmentY(0.0F);
        jLabel4.setPreferredSize(new java.awt.Dimension(600, 400));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 3, 620, 420));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
                    ModerMenu men = new ModerMenu();
                    men.setVisible(true);
                    setVisible(false);
    }//GEN-LAST:event_backActionPerformed

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed

        String to = emf.getText();
        Random x = new Random();
        int n = 99999+x.nextInt(900000);
        y=n;
        m=emf.getText();
        String content = "Codul pentru Imprumut este "+n;
        String sub = "Codul pentru imprumut";
        try{Mail.SendMess(to,sub,content);
        JOptionPane.showMessageDialog(null, "Codul a fost trimis!");
        }catch(Exception e){
            m=null;
            JOptionPane.showMessageDialog(null, "Adresa de email nu este valida!");
        }
        
    }//GEN-LAST:event_sendActionPerformed

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
    if(!(ncf.getText().equals("")))
        try{
            Connection con=BDConn.getBDConn();
            String sql ="Select nr_carti_disponibile from bibl where nume_carte=?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, ncf.getText());
            ResultSet rs = pst.executeQuery();
            rs.next();
            int x=rs.getInt("nr_carti_disponibile");
            if (x>0)JOptionPane.showMessageDialog(null, "Cartea poate fi imprumutata");
            else {
                sql ="Select Min(data_restituirii) from imprumut where Numele_cartii_imprumutate='"+ncf.getText()+"'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                rs.next();
                JOptionPane.showMessageDialog(null, "Cartea va fi disponibila la data de "+rs.getString("Min(data_restituirii)"));
            }
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, "Cartea nu exista in biblioteca!");
        }
    else JOptionPane.showMessageDialog(null, "Campul este gol!");  
    }//GEN-LAST:event_checkActionPerformed

    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
    try{ if (ncf.getText().equals(""))JOptionPane.showMessageDialog(null, "Completati campul 'Numele cartii'!");
    else{
            Connection con=BDConn.getBDConn();
            String sql ="Select nr_carti_disponibile from bibl where nume_carte=?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, ncf.getText());
            ResultSet rs = pst.executeQuery();
            rs.next();
            int x=rs.getInt("nr_carti_disponibile");    
            if (x>0){
                if (nf.getText().equals(""))JOptionPane.showMessageDialog(null, "Completati campul 'Numele'!");
                else if (pf.getText().equals(""))JOptionPane.showMessageDialog(null, "Completati campul 'Prenumele'!");
                else if (cnpf.getText().equals(""))JOptionPane.showMessageDialog(null, "Completati campul 'CNP'!");
                else try{if ((Long.parseLong(cnpf.getText())<1000000000000L)||(Long.parseLong(cnpf.getText())>9999999999999L))JOptionPane.showMessageDialog(null, "CNP introdus gresit!");
                else if (emf.getText().equals(""))JOptionPane.showMessageDialog(null, "Completati campul 'Email'!");
                else if (m==null)JOptionPane.showMessageDialog(null, "Nu ati trimis cod pe email!");
                else if (codf.getText().equals(""))JOptionPane.showMessageDialog(null, "Completati campul 'Code'!");
                else try{if (Integer.parseInt(codf.getText())!=y) JOptionPane.showMessageDialog(null, "Codul a fost introdus gresit!");
                else{
                    try{
                     sql="Select Count(cnp) from imprumut where (CNP=? or Email=?) and Numele_cartii_imprumutate=? and Restituit=0";
                     pst = con.prepareStatement(sql);
                     pst.setString(1, cnpf.getText());
                     pst.setString(2, emf.getText());
                     pst.setString(3, ncf.getText());
                     rs = pst.executeQuery();
                     rs.next();
                    int a=rs.getInt("Count(cnp)");
                    if (a!=0)JOptionPane.showMessageDialog(null, "Cartea a fost deja imprumutata de aceasta persoana!");
                    else{
                        try{
                            sql =("INSERT INTO imprumut (Numele_cartii_imprumutate,CNP,Nume,Prenume,Email) VALUES (?, ?, ?, ?, ?)");
                            pst = con.prepareStatement(sql);
                            pst.setString(1, ncf.getText());
                            pst.setString(2, cnpf.getText());
                            pst.setString(3, nf.getText());
                            pst.setString(4, pf.getText());
                            pst.setString(5, emf.getText());
                            pst.executeUpdate();
                            x=x-1;
                            sql =("Update bibl set nr_carti_disponibile="+x+" where nume_carte=?");
                            pst = con.prepareStatement(sql);                          
                            pst.setString(1, ncf.getText());
                            pst.executeUpdate();
                            JOptionPane.showMessageDialog(null, "Cartea a fost imprumutata cu succes!");
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Eroare!");
                        }
                    }}catch(Exception e){
                       JOptionPane.showMessageDialog(null, "Error!"); 
                    }
                }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Codul contine alte caractere decat cifre");
                }
                }catch(Exception e){
                   JOptionPane.showMessageDialog(null, "CNP-ul contine alte caractere decat cifre"); 
                }
                
                
                    
                }
            
            else {
                sql ="Select Min(data_restituirii) from imprumut where Numele_cartii_imprumutate="+ncf.getText();
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                JOptionPane.showMessageDialog(null, "Cartea va fi imprumutata disponibila la data de "+rs.getString("Min(data_restituirii)"));
            }
        }}catch(Exception e){
        JOptionPane.showMessageDialog(null, "Cartea nu exista in biblioteca!");
        }
        

                    
    }//GEN-LAST:event_createActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
      ncf.setText("");
      nf.setText("");
      pf.setText("");
      cnpf.setText("");
      emf.setText("");
      codf.setText("");
      m=null;
    }//GEN-LAST:event_resetActionPerformed
        
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton check;
    private javax.swing.JLabel cnp;
    private javax.swing.JTextField cnpf;
    private javax.swing.JLabel cod;
    private javax.swing.JTextField codf;
    private javax.swing.JButton create;
    private javax.swing.JLabel em;
    private javax.swing.JTextField emf;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel n;
    private javax.swing.JLabel nc;
    private javax.swing.JTextField ncf;
    private javax.swing.JTextField nf;
    private javax.swing.JLabel p;
    private javax.swing.JTextField pf;
    private javax.swing.JButton reset;
    private javax.swing.JButton send;
    // End of variables declaration//GEN-END:variables
}
